@startuml Central Antiquarian
entity Books {
    + bookId: UUID /'primary key, globally unique'/
    + isbn: text /'unique for same edition of book'/
    + sellerId: int /'foreign key'/
    + status: enum /'available, reserved, sold'/
    + price: numeric
    + title: text
    + author: text
    + year: int
    + type: text
    + genre: text
    + mass: numeric
    + buyInPrice: numeric
    + soldDate: timestamptz
}

entity Users {
    + userId: serial /'primary key'/
    + sellerId: int /'foreign key'/
    + role: enum /'admin, seller, customer'/
    + username: text /'unique'/
    + password: text /'hashed'/
    + name: text
    + address: text
    + email: text
    + phone: text
}

entity Orders {
    + orderId: serial /'primary key'/
    + userId: int
    + time: timestamptz
    + status: enum /'pending, completed'/
    + subtotal: numeric
    + shipping: numeric
    + total: numeric
}

entity OrderItems {
    + orderId: int /'primary key, foreign key'/
    + bookId: UUID /'primary key, foreign key'/
}

entity Sellers {
    + sellerId: serial
    + schemaName: text
    + independent: boolean
    + independent: boolean
    + name: text
    + address: text
    + zip: text
    + email: text
    + phone: text
}

Books --> Sellers
Orders --> Users
Orders <-- OrderItems
Users --> Sellers
Books <-- OrderItems
@enduml
